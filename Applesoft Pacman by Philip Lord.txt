1 REM Pacman game for Apple II Applesoft BASIC by Philip Lord and various LLMs. Designed to be played in an emulator (targeted for VIRTUAL ][) at full speed. Not playable on a real system.
5 HS=PEEK(24576)+PEEK(24577)*256+PEEK(24578)*65536+PEEK(24579)*16777216+PEEK(24580)*4294967296
6 PH = -1 : REM Previous high score for HUD
7 IF HS>99999 THEN HS=0
8 FZ = 0
9 FZ = PEEK(24581): IF FZ<>0 AND FZ<>1 THEN FZ=0:POKE 24581,0:REM First play flag: 0=first, 1=subsequent. Initialize if garbage.
10 REM Let the fun begin
11 PS = -1 : PU = -1 : PL = -1 : PV = -1 : REM Previous Score, Dots, Lives, Level
15 P=0:Q=0:S=0:D=0:O=0:T=0:G=0:F=0:U=0:V=0:C=0:L=0:Z=0:CTF=0
16 A=0:H=0:R=0:C1=0:B=0:B1=0:S1=0
70 DIM V%(19,15), QX%(300), QY%(300), PX%(19,15), PY%(19,15), PA%(300), PB%(300)
83 C1 = 1
85 H = 1
95 S1 = 0
100 REM RANDOMIZE FOR APPLESOFT
110 FOR I = 1 TO PEEK(-16384):X = RND(1):NEXT I
120 HOME
140 DIM M(20,16)
150 DIM X(5),Y(5)
160 DIM N$(5)
170 N$(1)="B":N$(2)="P":N$(3)="I":N$(4)="C"
190 DIM LX(5),LY(5)
195 DIM D(5)
220 DIM K$(5)
230 IF FZ = 0 THEN GOSUB 10500: GOSUB 10000: POKE 24581,1: REM Run setup if first time
236 K$(1) = CHR$(PEEK(24582)): K$(2) = CHR$(PEEK(24583)): K$(3) = CHR$(PEEK(24584)): K$(4) = CHR$(PEEK(24585))
237 S2 = PEEK(24586) : REM Load saved speed choice
238 REM Check if loaded keys or speed are valid (not 0 or garbage)
239 IF K$(1) = CHR$(0) OR K$(2) = CHR$(0) OR K$(3) = CHR$(0) OR K$(4) = CHR$(0) OR S2 = 0 OR S2 > 3 THEN FZ = 0: POKE 24581,0: POKE 24582,0: POKE 24583,0: POKE 24584,0: POKE 24585,0: POKE 24586,0: GOTO 230
240 REM Set S1 based on loaded S2
241 IF S2=1 THEN S1=500
242 IF S2=2 THEN S1=250
243 IF S2=3 THEN S1=100
244 GOSUB 10900
250 REM MAIN GAME LOOP
260 IF R=1 THEN GOSUB 760:R=0
261 A=1-A
262 IF A<>A2 THEN GOSUB 3500:A2=A
263 GOSUB 5500
264 IF H=1 THEN GOSUB 5000 : H=0
270 IF C1=1 THEN GOSUB 8000:C1=0
280 IF J THEN GOTO 285
281 VTAB 21:HTAB 1:PRINT ""
285 J = 0
290 IF F > 0 THEN F = F - 1
300 IF F = 0 AND G = 1 THEN G = 0
310 K$="":K3=PEEK(-16384):IF K3>=128 THEN K$=CHR$(K3-128):K4=0:POKE -16368,K4:IF ASC(K$)>=97 AND ASC(K$)<=122 THEN K$=CHR$(ASC(K$)-32)
330 IF K$=K$(1) THEN T=1
340 IF K$=K$(4) THEN T=2
350 IF K$=K$(2) THEN T=3
360 IF K$=K$(3) THEN T=4
365 IF K$="1" THEN C=0:Z=0:GOSUB 1060:K$="":END
370 IF K$="2" THEN GOSUB 9000:R=1:GOTO 250
380 OP=P:OQ=Q
390 REM Attempt Pac-Man move based on TID, then OLDD if first fails
400 D=T:GOSUB 670
410 IF D1=0 THEN D=O:GOSUB 670
420 IF D1=1 THEN O=D
430 REM Pac-Man's NEW position in P,Q. D holds direction.
440 REM Pac-Man Actions After Move
450 IF M(P,Q)=2 THEN S=S+1:M(P,Q)=0:U=U-1:H=1:IF S>HS THEN HS=S
460 IF M(P,Q)=3 THEN S=S+10:M(P,Q)=0:U=U-1:F=35:G=1:H=1:IF S>HS THEN HS=S
470 C2=OP:R2=OQ:GOSUB 1970
480 C2=P:R2=Q:GOSUB 2120
485 IF B1 = 1 AND P = 10 AND Q = 10 THEN GOSUB 8500: S = S + 500: B1 = 0: H = 1: IF S>HS THEN HS=S: VTAB (Q+2): HTAB P: PRINT " ": C2 = 10: R2 = 10: M(10,10) = 0: REM P = 10: Q = 10
490 FOR I=1 TO 4
510 LX(I)=X(I):LY(I)=Y(I)
520 NEXT I
530 GOSUB 990
540 GOSUB 1810
550 FOR I=1 TO 4
570 IF P=X(I) AND Q=Y(I) THEN C=I:CTF=0:GOSUB 1700:GOTO 590
580 IF P=LX(I) AND Q=LY(I) AND OP=X(I) AND OQ=Y(I) THEN C=I:CTF=1:GOSUB 1700
590 NEXT I
591 IF U<=0 THEN V=V+1:C1=1: FLASH :VTAB 10:HTAB 8:PRINT "CLEAR":FOR DL=1 TO 70000: NORMAL :NEXT DL:GOSUB 7500:GOSUB 760:PRINT "       ":GOTO 250
620 IF Z=0 THEN GOSUB 1060:END
630 FOR K=1 TO S1:GOSUB 30000:NEXT K
640 GOTO 250
670 REM PAC-MAN MOVES IN DIRECTION D (D1=0 if blocked, D1=1 if moved)
680 D1=0
690 IF D=1 AND Q>1 AND M(P,Q-1)<>1 AND M(P,Q-1)<>4 THEN Q=Q-1:D1=1:RETURN
700 IF D=2 AND P=19 AND Q=8 THEN P=1:D1=1:RETURN
710 IF D=2 AND P<19 AND M(P+1,Q)<>1 AND M(P+1,Q)<>4 THEN P=P+1:D1=1:RETURN
720 IF D=3 AND Q<15 AND M(P,Q+1)<>1 AND M(P,Q+1)<>4 THEN Q=Q+1:D1=1:RETURN
730 IF D=4 AND P=1 AND Q=8 THEN P=19:D1=1:RETURN
740 IF D=4 AND P>1 AND M(P-1,Q)<>1 AND M(P-1,Q)<>4 THEN P=P-1:D1=1:RETURN
750 RETURN
760 REM FULL BOARD DRAW (PRINT VERSION, OPTIMIZED)
761 GOSUB 5000
770 FOR R2=1 TO 15
775 VTAB R2+2:HTAB 1
780 FOR C2=1 TO 19
790 IF C2=P AND R2=Q THEN GOSUB 2120:GOTO 880
795 IF B1=1 AND C2=10 AND R2=10 THEN PRINT "$";:GOTO 880
800 K=M(C2,R2)
810 IF K=1 THEN INVERSE:PRINT " ";:NORMAL:GOTO 880
820 IF K=2 THEN PRINT ".";:GOTO 880
830 IF K=3 THEN GOSUB 3550:GOTO 880
840 PRINT " ";
880 NEXT C2
885 NEXT R2
890 RETURN
900 REM COUNT DOTS SUBROUTINE not used!
910 T1=0
920 FOR R2=1 TO 15
930 FOR C2=1 TO 19
940 IF M(C2,R2)=2 OR M(C2,R2)=3 THEN T1=T1+1
950 NEXT C2
960 NEXT R2
970 RETURN
990 REM GHOST AI SUBROUTINE
1000 FOR I=1 TO 4
1010 GOSUB 2380
1020 NEXT I
1030 RETURN
1060 REM GAME OVER/PLAY AGAIN
1061 POKE 24576,HS-INT(HS/256)*256:POKE 24577,INT(HS/256)-INT(HS/65536)*256:POKE 24578,INT(HS/65536)-INT(HS/16777216)*256:POKE 24579,INT(HS/16777216)-INT(HS/4294967296)*256:POKE 24580,INT(HS/4294967296): REM Poke the HighScore
1063 VTAB 19:HTAB 17:PRINT "---"
1064 IF C>0 THEN VTAB 21:HTAB 1:GOSUB 10700:PRINT "Caught by ";W$;"!"
1065 VTAB 23:HTAB 1:PRINT "PLAY AGAIN (Y/N)? ";
1066 K4=0:POKE -16368,K4:GET K$
1067 IF K$="Y" OR K$="y" THEN CLEAR: RUN
1068 IF K$="N" OR K$="n" THEN POKE 24581,0:POKE 24582,0:POKE 24583,0:POKE 24584,0:POKE 24585,0:POKE 24586,0:HOME:END:REM Reset first play flag and key/speed memory
1069 GOTO 1066
1700 REM COLLISION CHECK / GHOST EAT SUBROUTINE
1710 IF G>0 THEN GOSUB 6000: RETURN
1715 REM Pac-Man dies
1720 L=L-1
1722 IF CTF = 1 THEN GOSUB 1760
1724 GOSUB 4000
1725 GOSUB 10700:J=1:H=1
1726 IF L > 0 THEN C1 = 1 : GOSUB 2040 : GOTO 250
1727 H = 1 : GOSUB 5000 : Z = 0 : RETURN
1760 REM Passthrough collision specific handling
1761 VTAB (Y(C)+2): HTAB X(C): PRINT " ";
1762 X(C)=10:Y(C)=8
1763 RETURN
1810 REM REDRAW GHOSTS (after they moved)
1820 FOR I=1 TO 4
1830 IF LX(I)>0 AND LY(I)>0 THEN C2=LX(I):R2=LY(I):GOSUB 1970
1835 C4=I:GOSUB 1900
1870 NEXT I
1880 RETURN
1900 REM DRAW SINGLE GHOST SUBROUTINE
1905 VTAB (Y(C4)+2):HTAB X(C4)
1910 K$=N$(C4):REM IF G THEN K$=CHR$(64)
1920 IF G=1 AND F>8 THEN INVERSE: PRINT "$";: NORMAL
1922 IF G=1 AND F<=8 THEN FLASH: PRINT "#";: NORMAL
1925 IF G=0 THEN PRINT K$;
1930 RETURN
1970 REM DRAW CELL AT (C2, R2) based on M% value
1980 VTAB (R2+2):HTAB C2
1985 IF B1 = 1 AND C2 = 10 AND R2 = 10 THEN PRINT "$";:RETURN
1990 K=M(C2,R2)
2000 IF K=1 THEN INVERSE:PRINT " ";:NORMAL:RETURN
2010 IF K=2 THEN PRINT ".";:RETURN
2020 IF K=3 THEN GOSUB 3550:RETURN
2030 PRINT " ";:RETURN
2040 REM RESET PAC-MAN AND GHOSTS POSITIONS AFTER LIFE LOSS
2050 P=10:Q=12:D=2:O=2:T=0
2060 X(1)=8:Y(1)=8
2070 X(2)=9:Y(2)=8
2080 X(3)=10:Y(3)=8
2090 X(4)=11:Y(4)=8
2095 D=2:O=2:T=0
2100 F=0:G=0
2110 R=1
2112 FOR I=1 TO 4:D(I)=0:NEXT I
2115 RETURN
2120 REM DRAW PAC-MAN CHARACTER BASED ON DIRECTION
2130 VTAB (R2+2):HTAB C2
2140 IF D=1 THEN PRINT "v";:RETURN
2150 IF D=2 THEN PRINT "<";:RETURN
2160 IF D=3 THEN PRINT "^";:RETURN
2170 IF D=4 THEN PRINT ">";:RETURN
2180 PRINT "<";:RETURN
2380 REM GHOST AI FOR GHOST I
2390 G2=X(I):G3=Y(I)
2400 T3=0:T4=0
2410 IF G THEN GOTO 2570
2430 IF I=1 THEN T3=P:T4=Q
2440 IF I=2 THEN X1=P:Y1=Q
2450 IF I=2 AND D=1 THEN T4=Y1-4:T3=X1
2460 IF I=2 AND D=2 THEN T3=X1+4:T4=Y1
2470 IF I=2 AND D=3 THEN T4=Y1+4:T3=X1
2480 IF I=2 AND D=4 THEN T3=X1-4:T4=Y1
2490 IF I=3 THEN B2=X(1):B3=Y(1):D2=P-B2:D3=Q-B3:T3=P+D2:T4=Q+D3
2500 IF I=4 AND (ABS(X(4)-P)+ABS(Y(4)-Q))>8 THEN T3=P:T4=Q:GOTO 2580
2510 IF I=4 AND (ABS(X(4)-P)+ABS(Y(4)-Q))<=8 THEN T3=1:T4=15
2520 GOTO 2580
2570 T3=(RND(1)*19)+1:T4=(RND(1)*15)+1
2580 M1=999:R3=0
2600 FOR J1=1 TO 4
2610 N1=G2:N2=G3
2620 IF J1=1 THEN N2=N2-1
2630 IF J1=2 THEN N1=N1+1
2640 IF J1=3 THEN N2=N2+1
2650 IF J1=4 THEN N1=N1-1
2660 IF N1=0 AND N2=8 THEN N1=19
2670 IF N1=20 AND N2=8 THEN N1=1
2680 IF N1<1 OR N1>19 OR N2<1 OR N2>15 THEN GOTO 2740
2690 IF M(N1,N2)=1 THEN GOTO 2740
2700 IF D(I)>0 THEN IF J1=1 AND D(I)=3 THEN GOTO 2740
2710 IF D(I)>0 THEN IF J1=2 AND D(I)=4 THEN GOTO 2740
2720 IF D(I)>0 THEN IF J1=3 AND D(I)=1 THEN GOTO 2740
2730 IF D(I)>0 THEN IF J1=4 AND D(I)=2 THEN GOTO 2740
2735 K=ABS(N1-T3)+ABS(N2-T4):IF K<M1 THEN M1=K:R3=J1
2740 NEXT J1
2750 IF R3=0 THEN GOTO 2780
2755 GOTO 3040
2780 FOR J1=1 TO 4
2790 N1=G2:N2=G3
2800 IF J1=1 THEN N2=N2-1
2810 IF J1=2 THEN N1=N1+1
2820 IF J1=3 THEN N2=N2+1
2830 IF J1=4 THEN N1=N1-1
2840 IF N1=0 AND N2=8 THEN N1=19
2850 IF N1=20 AND N2=8 THEN N1=1
2860 IF N1<1 OR N1>19 OR N2<1 OR N2>15 THEN GOTO 2880
2870 IF M(N1,N2)=1 THEN GOTO 2880
2875 K=ABS(N1-T3)+ABS(N2-T4):IF K<M1 THEN M1=K:R3=J1
2880 NEXT J1
2890 IF R3=0 THEN GOTO 2910
2895 GOTO 3040
2910 FOR J1=1 TO 4
2920 N1=G2:N2=G3
2930 IF J1=1 THEN N2=N2-1
2940 IF J1=2 THEN N1=N1+1
2950 IF J1=3 THEN N2=N2+1
2960 IF J1=4 THEN N1=N1-1
2970 IF N1=0 AND N2=8 THEN N1=19
2980 IF N1=20 AND N2=8 THEN N1=1
2990 IF N1<1 OR N1>19 OR N2<1 OR N2>15 THEN GOTO 3030
3000 IF M(N1,N2)=1 THEN GOTO 3030
3010 R3=J1:GOTO 3040
3030 NEXT J1
3040 IF R3=1 THEN Y(I)=Y(I)-1:D(I)=1
3050 IF R3=2 THEN X(I)=X(I)+1:D(I)=2
3060 IF R3=3 THEN Y(I)=Y(I)+1:D(I)=3
3070 IF R3=4 THEN X(I)=X(I)-1:D(I)=4
3085 IF X(I)=0 AND Y(I)=8 THEN X(I)=19
3086 IF X(I)=20 AND Y(I)=8 THEN X(I)=1
3090 RETURN
3500 REM REDRAW POWER PILLS ONLY
3510 FOR R2=1 TO 15
3520 FOR C2=1 TO 19
3530 IF M(C2,R2)=3 THEN VTAB (R2+2):HTAB C2:GOSUB 3550
3540 NEXT C2
3545 NEXT R2
3547 RETURN
3550 REM PRINT POWER PILL CHARACTER BASED ON A
3560 IF A=0 THEN PRINT "+";:RETURN
3570 IF A=1 THEN PRINT "*";:RETURN
4000 REM PAC-MAN DEATH ANIMATION SUBROUTINE
4010 REM HOME removed to keep the board visible
4020 DV% = 1
4030 FOR L1 = 1 TO 16
4040 FOR X1 = 1 TO 4000 : NEXT X1
4050 IF DV% = 1 THEN PCHAR$ = ">"
4060 IF DV% = 2 THEN PCHAR$ = "v"
4070 IF DV% = 3 THEN PCHAR$ = "<"
4080 IF DV% = 4 THEN PCHAR$ = "^"
4090 VTAB (Q+2): HTAB P: PRINT " ";
4100 VTAB (Q+2): HTAB P: PRINT PCHAR$;
4110 DV% = DV% + 1
4120 IF DV% > 4 THEN DV% = 1
4130 NEXT L1
4140 FOR DL = 1 TO 10000 : NEXT DL
4180 VTAB (Q+2): HTAB P: PRINT " ";
4190 RETURN
5000 REM --- INCREMENTAL HUD UPDATE ---
5010 IF S <> PS THEN VTAB 1: HTAB 7: PRINT S; : PS = S
5012 IF HS<>PH THEN VTAB 1:HTAB 15:PRINT HS;" ";:PH=HS
5020 REM IF U <> PU THEN VTAB 1: HTAB 17: PRINT U; : PRINT " " : PU = U : REM pill counter HUD?
5030 IF V <> PV THEN VTAB 19: HTAB 7: IF V < 10 THEN PRINT "0"; : PRINT V; : PV = V
5040 IF L = 3 THEN VTAB 19: HTAB 17: PRINT "<<<";: PL = L
5043 IF L = 2 THEN VTAB 19: HTAB 19: PRINT "-"
5045 IF L = 1 THEN VTAB 19: HTAB 18: PRINT "--"
5050 RETURN
5500 REM BONUS ITEM LOGIC
5501 IF B1 = 1 THEN GOTO 5511
5502 REM Bonus is not active, try to make it appear based on random chance
5503 IF RND(1) < 0.01 THEN GOTO 5505
5504 RETURN
5505 REM Random condition met! Try to place bonus
5506 REM IF M(10,10) = 1 OR M(10,10) = 4 THEN RETURN
5507 BO = M(10,10)
5508 B = 50: B1 = 1
5509 VTAB (12): HTAB 10: PRINT "$"; : REM Draw Bonus Character
5510 RETURN
5511 B = B - 1
5512 IF B > 0 THEN RETURN
5513 REM Bonus timer ran out, clear bonus
5514 B1 = 0
5515 M(10,10) = BO
5516 C2 = 10: R2 = 10: GOSUB 1970
5517 REM R = 1
5518 RETURN
6000 REM --- GHOST EATEN: ANIMATE "EYES" FLYING HOME WITH BFS ---
6005 S=S+200:
6006 IF S>HS THEN HS=S:C=I
6010 X1 = X(C): Y1 = Y(C): C2 = X1: R2 = Y1: GOSUB 1970
6015 C2=P:R2=Q:GOSUB 2120
6030 X4% = 10: Y4% = 8
6040 FOR J = 1 TO 19: FOR K = 1 TO 15: V%(J,K) = 0: PX%(J,K) = 0: PY%(J,K) = 0: NEXT K: NEXT J
6050 H1% = 1: T5% = 1
6060 QX%(1) = X1: QY%(1) = Y1: V%(X1,Y1) = 1
6070 F1% = 0
6080 REM --- BFS Loop ---
6090 IF H1% > T5% OR F1% = 1 THEN GOTO 6200
6100 C6 = QX%(H1%): C7 = QY%(H1%)
6110 FOR J1 = 1 TO 4
6120 N1 = C6: N2 = C7
6130 IF J1 = 1 THEN N2 = N2 - 1
6140 IF J1 = 2 THEN N1 = N1 + 1
6150 IF J1 = 3 THEN N2 = N2 + 1
6160 IF J1 = 4 THEN N1 = N1 - 1
6170 IF N1 < 1 OR N1 > 19 OR N2 < 1 OR N2 > 15 THEN GOTO 6190
6180 IF V%(N1,N2) = 1 THEN GOTO 6190
6185 IF M(N1,N2) = 1 THEN IF N1 <> X4% OR N2 <> Y4% THEN GOTO 6190
6186 T5% = T5% + 1: QX%(T5%) = N1: QY%(T5%) = N2: V%(N1,N2) = 1: PX%(N1,N2) = C6: PY%(N1,N2) = C7
6187 IF N1 = X4% AND N2 = Y4% THEN F1% = 1: J1 = 5
6190 NEXT J1
6195 H1% = H1% + 1
6196 GOTO 6090
6200 IF F1% = 0 THEN X2 = X1: Y2 = Y1: GOTO 6400
6210 N3% = 0: T3 = X4%: T4 = Y4%
6220 FOR I = 1 TO 110: PA%(I) = 0: PB%(I) = 0: NEXT I
6230 IF T3 = X1 AND T4 = Y1 THEN GOTO 6280
6240 N3% = N3% + 1: PA%(N3%) = T3: PB%(N3%) = T4
6250 C6 = PX%(T3,T4): C7 = PY%(T3,T4)
6260 T3 = C6: T4 = C7
6270 GOTO 6230
6280 IF N3%=0 THEN GOTO 6400
6290 X2 = PA%(N3%): Y2 = PB%(N3%)
6295 VTAB (Y2 + 2): HTAB X2: PRINT CHR$(34);
6296 FOR DL = 1 TO 1200: NEXT DL
6297 C2=P:R2=Q:GOSUB 2120
6300 FOR I = N3% - 1 TO 1 STEP -1
6310 C2 = X2: R2 = Y2: GOSUB 1970
6320 X2 = PA%(I): Y2 = PB%(I)
6330 VTAB (Y2 + 2): HTAB X2: PRINT CHR$(34);
6340 FOR DL = 1 TO 1200: NEXT DL
6345 C2=P:R2=Q:GOSUB 2120
6350 NEXT I
6360 C2 = X2: R2 = Y2: GOSUB 1970
6365 C2=P:R2=Q:GOSUB 2120
6400 X(C) = 10: Y(C) = 8
6420 C4 = C: GOSUB 1900
6430 RETURN
7500 REM LEVEL SETUP SUBROUTINE
7510 IF V>4 THEN V=1
7520 RESTORE
7530 IF V=1 THEN GOTO 7540
7536 FOR S3=1 TO (V-1)*15:READ Z$:NEXT S3
7540 FOR R2=1 TO 15
7550 READ Z$
7560 FOR C2=1 TO 19
7570 C$=MID$(Z$,C2,1)
7580 IF C$="#" THEN M(C2,R2)=1
7590 IF C$="." THEN M(C2,R2)=2
7600 IF C$=" " THEN M(C2,R2)=0
7601 IF C$="-" THEN M(C2,R2)=4
7610 IF C$="+" THEN M(C2,R2)=3
7620 NEXT C2
7630 NEXT R2
7640 P=10:Q=12
7650 X(1)=8:Y(1)=8:X(2)=9:Y(2)=8:X(3)=10:Y(3)=8:X(4)=11:Y(4)=8
7660 G=0:F=0
7670 D=2:O=2:T=2
7680 GOSUB 900: REM goto dots subroutine
7690 U=T1
7700 R=1
7710 RETURN
8000 REM COUNTDOWN SUBROUTINE
8010 VTAB 10:HTAB 8:PRINT "   "
8020 VTAB 10:HTAB 10:PRINT "3"
8030 FOR D=1 TO 30000:NEXT D
8050 VTAB 10:HTAB 10:PRINT "2"
8060 FOR D=1 TO 30000:NEXT D
8080 VTAB 10:HTAB 10:PRINT "1"
8090 FOR D=1 TO 30000:NEXT D
8110 VTAB 10:HTAB 9:PRINT "GO!"
8120 FOR D=1 TO 30000:NEXT D
8130 VTAB 10:HTAB 8:PRINT "    "
8140 RETURN
8500 REM ANIMATE BONUS $ SIGN
8501 FOR B2 = 1 TO 4
8502 VTAB (R2+2): HTAB C2: PRINT "S";
8503 FOR B3 = 1 TO 2000 : NEXT B3
8504 VTAB (R2+2): HTAB C2: PRINT CHR$(124);
8505 FOR B3 = 1 TO 2000 : NEXT B3
8506 NEXT B2
8508 RETURN
9000 REM ADVANCE TO NEXT LEVEL
9005 L=3
9010 V=V+1
9015 S=0:REM Reset score to 0 for new level
9016 VTAB 1: HTAB 8: PRINT "     ";
9020 GOSUB 7500
9030 C1=1
9040 D1=0
9050 RETURN
9500 REM MANUAL PAC-MAN POSITION INPUT
9505 HOME
9506 S=0: H=1: REM Reset score to 0 and trigger HUD update when manually advancing level
9510 VTAB 1:HTAB 1
9520 PRINT "MANUALLY SET PAC-MAN'S POSITION"
9530 PRINT "ENTER PAC-MAN'S X (1-19): ";
9540 INPUT I
9550 IF I<1 OR I>19 THEN PRINT "INVALID X. PLEASE ENTER A VALUE BETWEEN 1 AND 19.":GOTO 9530
9560 PRINT "ENTER PAC-MAN'S Y (1-15): ";
9570 INPUT J
9580 IF J<1 OR J>15 THEN PRINT "INVALID Y. PLEASE ENTER A VALUE BETWEEN 1 AND 15.":GOTO 9560
9582 IF M(I,J)=1 THEN PRINT "CANNOT PLACE PAC-MAN ON A WALL.":GOTO 9530
9590 P=I:Q=J
9591 IF B1 = 1 AND P = 10 AND Q = 10 THEN B1 = 0: S = S + 500: H = 1
9592 IF M(P,Q)=2 THEN S=S+1:M(P,Q)=0:U=U-1
9593 IF M(P,Q)=3 THEN S=S+10:M(P,Q)=0:U=U-1:G=1:F=35
9595 D=2:O=2
9600 X(1)=8:Y(1)=8:X(2)=9:Y(2)=8:X(3)=10:Y(3)=8:X(4)=11:Y(4)=8
9605 G=0:F=0
9606 D1=0
9607 R=1
9609 C1=1
9610 HOME
9611 H=1
9612 RETURN
10000 REM CUSTOM KEY SETUP SUBROUTINE
10010 HOME
10020 VTAB 5:HTAB 10:INVERSE: PRINT " CUSTOMISE CONTROLS ": NORMAL
10025 VTAB 7:HTAB 10:PRINT "--------------------"
10027 PRINT
10040 VTAB 9:HTAB 11:PRINT "Avoid keys 1 and 2"
10042 PRINT
10056 FOR I=1 TO 4:K$(I)="":NEXT I
10060 VTAB 12:HTAB 11:PRINT "KEY FOR UP        :   ";:K4=0:POKE -16368,K4:GET K1$
10070 IF K1$="" THEN GOTO 10060
10075 IF ASC(K1$)>=97 AND ASC(K1$)<=122 THEN K1$=CHR$(ASC(K1$)-32)
10090 IF K1$="1" OR K1$="2" THEN VTAB 22:HTAB 10:PRINT "THAT KEY IS RESERVED.   ":GOTO 10060
10100 K$(1)=K1$:PRINT K1$:POKE 24582, ASC(K$(1)): REM Store Up key
10110 VTAB 22:HTAB 11:PRINT "                                        "
10120 VTAB 14:HTAB 11:PRINT "KEY FOR DOWN     :   ";:K4=0:POKE -16368,K4:GET K2$
10130 IF K2$="" THEN GOTO 10120
10135 IF ASC(K2$)>=97 AND ASC(K2$)<=122 THEN K2$=CHR$(ASC(K2$)-32)
10150 IF K2$="1" OR K2$="2" OR K2$="3" THEN VTAB 22:HTAB 10:PRINT "THAT KEY IS RESERVED.   ":GOTO 10120
10160 IF K2$=K$(1) THEN VTAB 22:HTAB 10:VTAB 22:HTAB 10:PRINT "ERROR: KEY ALREADY USED.":GOTO 10120
10170 K$(2)=K2$:PRINT K2$:POKE 24583, ASC(K$(2)): REM Store Down key
10180 VTAB 22:HTAB 11:PRINT "                                        "
10190 VTAB 16:HTAB 11:PRINT "KEY FOR LEFT    :  ";:K4=0:POKE -16368,K4:GET K3$
10200 IF K3$="" THEN GOTO 10190
10205 IF ASC(K3$)>=97 AND ASC(K3$)<=122 THEN K3$=CHR$(ASC(K3$)-32)
10220 IF K3$="1" OR K3$="2" OR K3$="3" THEN VTAB 22:HTAB 10:PRINT "THAT KEY IS RESERVED.   ":GOTO 10190
10230 IF K3$=K$(1) OR K3$=K$(2) THEN VTAB 22:HTAB 10:PRINT "ERROR: KEY ALREADY USED.":GOTO 10190
10240 K$(3)=K3$:PRINT K3$:POKE 24584, ASC(K$(3)): REM Store Left key
10250 VTAB 22:HTAB 11:PRINT "                                        "
10260 VTAB 18:HTAB 11:PRINT "KEY FOR RIGHT  :  ";;:K4=0:POKE -16368,K4:GET K4$
10270 IF K4$="" THEN GOTO 10260
10275 IF ASC(K4$)>=97 AND ASC(K4$)<=122 THEN K4$=CHR$(ASC(K4$)-32)
10280 IF LEN(K4$)<>1 THEN PRINT "ERROR: PLEASE ENTER A SINGLE CHARACTER.":GOTO 10260
10290 IF K4$="1" OR K4$="2" OR K4$="3" THEN VTAB 22:HTAB 10:PRINT "THAT KEY IS RESERVED.   ":GOTO 10260
10300 IF K4$=K$(1) OR K4$=K$(2) OR K4$=K$(3) THEN VTAB 22:HTAB 10:PRINT  "ERROR: KEY ALREADY USED.":GOTO 10260
10310 K$(4)=K4$:PRINT K4$:POKE 24585, ASC(K$(4)): REM Store Right key
10320 VTAB 22:HTAB 10:PRINT "                                        "
10420 VTAB 23:HTAB 9:PRINT "Press a key to start..."
10430 K4=0:POKE -16368,K4:GET K$
10440 HOME
10450 RETURN
10500 REM SPEED SELECTION SCREEN SUBROUTINE
10510 HOME
10520 VTAB 5:HTAB 10:INVERSE: PRINT "  SELECT GAME SPEED  ": Normal
10530 VTAB 7:HTAB 10:PRINT "---------------------"
10540 VTAB 9:HTAB 10:PRINT "1. SLOW (Classic)"
10550 VTAB 11:HTAB 10:PRINT "2. MEDIUM (Challenge)"
10560 VTAB 13:HTAB 10:PRINT "3. FAST (Impossible)"
10570 VTAB 16:HTAB 10:PRINT "ENTER CHOICE (1-3): ";
10571 K4=0:POKE -16368,K4
10572 GET S$
10573 IF S$="" THEN GOTO 10572
10576 IF S$="1" THEN S2=1:GOTO 10590
10577 IF S$="2" THEN S2=2:GOTO 10590
10578 IF S$="3" THEN S2=3:GOTO 10590
10581 VTAB 18:HTAB 10:PRINT "INVALID CHOICE.   "
10582 GOTO 10570
10590 IF S2=1 THEN S1=500:POKE 24586, S2:RETURN
10600 IF S2=2 THEN S1=250:POKE 24586, S2:RETURN
10605 IF S2=3 THEN S1=1:POKE 24586, S2:RETURN
10700 REM SHOW WHICH GHOST CAUGHT YOU
10710 W$="GHOST"
10720 IF C=1 THEN W$="Blinky"
10730 IF C=2 THEN W$="Pinky"
10740 IF C=3 THEN W$="Inky"
10750 IF C=4 THEN W$="Clyde"
10760 RETURN
10900 REM FULL GAME RESET SUBROUTINE
10910 HOME
10912 VTAB 1:HTAB 1:PRINT "SCORE:0"
10913 VTAB 1:HTAB 12:PRINT "HI:"
10914 VTAB 19: HTAB 1: PRINT "LEVEL:"
10915 VTAB 19: HTAB 11: PRINT "LIVES:"
10920 V=1
10930 P=10:Q=12
10940 S=0:D=2:O=2:D1=0:T=2
10950 L=3
10960 G=0
10970 F=0
10980 Z=1
10990 C=0
11000 W$=""
11010 PS = -1: PU = -1: PL = -1: PV = -1
11011 PH = -1
11012 GOSUB 5000
11015 FOR I=1 TO 4:D(I)=0:NEXT I
11020 GOSUB 7500
11030 R=1
11035 C1=1
11040 RETURN
11100 DATA ###################
11110 DATA #.................#
11120 DATA #.#.#.#######.#.#.#
11130 DATA #+..#....#....#..+#
11140 DATA ###.####.#.####.###
11150 DATA --#.#.........#.#--
11160 DATA ###.#.###-###.#.###
11170 DATA ......#-----#......
11180 DATA ###.#.#######.#.###
11190 DATA --#.#.........#.#--
11200 DATA ###.#.#######.#.###
11210 DATA #+....... .......+#
11220 DATA #.#.###.###.###.#.#
11230 DATA #.................#
11240 DATA ###################
11250 DATA ###################
11260 DATA #+...............+#
11270 DATA #.#.#.###.###.#.#.#
11280 DATA #.....#-#.#-#.....#
11290 DATA ###.#.###.###.#.###
11300 DATA --#.#.........#.#--
11310 DATA ###.#.###-###.#.###
11320 DATA ....#.#-----#.#....
11330 DATA ###.#.#######.#.###
11340 DATA --#.............#--
11350 DATA ###.#####.#####.###
11360 DATA #...#---# #---#...#
11370 DATA #.#.#####.#####.#.#
11380 DATA #+...............+#
11390 DATA ###################
11400 DATA ###################
11410 DATA #+...............+#
11420 DATA #.###.#.###.#.###.#
11430 DATA #.#-#.#.#-#.#.#-#.#
11440 DATA #.###.#.###.#.###.#
11450 DATA #.................#
11460 DATA #####.###-###.#####
11470 DATA ......#-----#......
11480 DATA #####.#######.#####
11490 DATA #.................#
11500 DATA #.###.#.###.#.###.#
11510 DATA #.#-#.#.. ..#.#-#.#
11520 DATA #.###.#.###.#.###.#
11530 DATA #+...............+#
11540 DATA ###################
11550 DATA #####-#######-#####
11560 DATA #+..#-#.....#-#..+#
11570 DATA #.#.###.#.#.###.#.#
11580 DATA #.#.....#.#.....#.#
11590 DATA #.###.###.###.###.#
11600 DATA #.................#
11610 DATA #.###.###-###.###.#
11620 DATA ......#-----#......
11630 DATA #.###.#######.###.#
11640 DATA #.................#
11650 DATA #.###.###.###.###.#
11660 DATA #.#.....# #.....#.#
11670 DATA #.#.###.#.#.###.#.#
11680 DATA #+..#-#.....#-#..+#
11690 DATA #####-#######-#####
30000 REM POLLING FOR INPUT DURING DELAY
30010 XP=PEEK(-16384)
30020 IF XP<128 THEN RETURN
30030 IP$=CHR$(XP-128)
30040 K4=0:POKE -16368,K4
30050 IF ASC(IP$)>=97 AND ASC(IP$)<=122 THEN IP$=CHR$(ASC(IP$)-32)
30065 IF IP$="1" THEN C=0:Z=0:GOSUB 1060:END
30066 IF IP$="2" THEN GOSUB 9000:K=S1:RETURN
30080 IF IP$=K$(1) THEN T=1
30090 IF IP$=K$(4) THEN T=2
31000 IF IP$=K$(2) THEN T=3
31010 IF IP$=K$(3) THEN T=4
31020 RETURN
